#CrmMaintenanceMgt@Search
--CrmMaintenanceMgt@SearchSELECT A.CUST_CD     , A.CUST_NM     , MAX(A.REQ_FIN) AS REQ_FIN     , MAX(A.REQ_COUNT) AS REQ_COUNT     , MAX(A.WORK_TOTAL) AS WORK_TOTAL     , MAX(A.WORK_AVG) AS WORK_AVGFROM (       SELECT A.CUST_CD       , A.CUST_LOC_NM AS CUST_NM       , '' AS REQ_FIN       , 0 AS REQ_COUNT        , 0 AS WORK_TOTAL        , 0 AS WORK_AVG       FROM CRM_CUST_MST A    WHERE A.CUST_TYPE = 'C'	 [SEARCH_KEY]		AND ( 1 != 1				 OR A.CUST_CD LIKE '%@SEARCH_KEY%'				 OR A.CUST_NM LIKE '%@SEARCH_KEY%'			 )	[/SEARCH_KEY]      UNION      SELECT A.CUST_CD       , A.CUST_LOC_NM AS CUST_NM       , MAX(B.REQ_YMD) AS REQ_FIN       , CASE WHEN MAX(B.REQ_YMD) IS NULL              THEN 0              ELSE COUNT(A.CUST_CD)              END AS REQ_COUNT  -- 요청건수       , CASE WHEN MAX(B.REQ_YMD) IS NULL              THEN 0              ELSE SUM(TO_DATE(NVL(B.CMPT_YMD,B.REQ_YMD),'YYYYMMDD') - TO_DATE(B.REQ_YMD,'YYYYMMDD') + 1)               END AS WORK_TOTAL --총작업일수       , CASE WHEN MAX(B.REQ_YMD) IS NULL              THEN 0              ELSE ROUND(AVG(TO_DATE(NVL(B.CMPT_YMD,B.REQ_YMD),'YYYYMMDD') - TO_DATE(B.REQ_YMD,'YYYYMMDD') + 1), 1)               END AS WORK_AVG --평균작업기간    FROM CRM_AS_MST B LEFT OUTER JOIN CRM_CUST_MST A ON A.CUST_CD = B.CUST_CD   WHERE 1=1	 [SEARCH_KEY]		AND ( 1 != 1				 OR B.CUST_CD LIKE '%@SEARCH_KEY%'				 OR A.CUST_NM LIKE '%@SEARCH_KEY%'				 OR A.CUST_LOC_NM LIKE '%@SEARCH_KEY%'			     OR B.WORK_USR LIKE '%@SEARCH_KEY%'			 )	[/SEARCH_KEY]	[FM_YMD]		AND B.REQ_YMD >= '@FM_YMD'	[/FM_YMD]	[TO_YMD]		AND B.REQ_YMD <= '@TO_YMD'	[/TO_YMD]	[SVC_CD]	    --AND A.SVC_CD = '@SVC_CD'	    AND A.CUST_CD IN (SELECT CUST_CD FROM CRM_CUST_SVC WHERE SVC_CD = '@SVC_CD')	[/SVC_CD]	[MATN_YN]	    AND A.MATN_YN = '@MATN_YN'	[/MATN_YN]   GROUP BY A.CUST_CD, A.CUST_LOC_NM) A   GROUP BY A.REQ_COUNT, A.CUST_CD, A.CUST_NMORDER BY A.REQ_COUNT DESC, A.CUST_CD, A.CUST_NM
#CrmMaintenanceMgt@SearchPivot
--CrmMaintenanceMgt@SearchPivotWITH W_CRM_CUST_SVCAS(	SELECT A.CUST_CD	     , SUBSTR(	        XMLAGG(	            XMLELEMENT(COL ,',', B.CD_NM) ORDER BY B.CD_NM).EXTRACT('//text()'	        ).GETSTRINGVAL()	       , 2) AS SVC_CD	     , SUBSTR(	        XMLAGG(	            XMLELEMENT(COL ,',', C.CD_NM) ORDER BY B.CD_NM).EXTRACT('//text()'	        ).GETSTRINGVAL()	       , 2) AS DEPT_CD         , SUBSTR(            XMLAGG(                XMLELEMENT(COL ,',', A.SALES_NM) ORDER BY B.CD_NM).EXTRACT('//text()'            ).GETSTRINGVAL()           , 2) AS SALES_NM	  FROM CRM_CUST_SVC A	       INNER JOIN MDM_COM_CODE B	               ON A.SVC_CD = B.COMN_CD	              AND B.GRP_CD = 'C01'	       INNER JOIN MDM_COM_CODE C	               ON A.DEPT_CD = C.COMN_CD	              AND C.GRP_CD = 'C03'	 WHERE A.SVC_CD IS NOT NULL		   --동일조건 아래쪽에도 추가해야함		   AND A.CUST_CD IN ( SELECT B.CUST_CD							    FROM CRM_AS_MST B LEFT OUTER JOIN CRM_CUST_MST A ON A.CUST_CD = B.CUST_CD							   WHERE 1=1							   --동일조건 위쪽에도 추가해야함								[SEARCH_KEY]									AND ( 1 != 1											 OR B.CUST_CD     LIKE '%@SEARCH_KEY%'											 OR A.CUST_NM     LIKE '%@SEARCH_KEY%'											 OR A.CUST_LOC_NM LIKE '%@SEARCH_KEY%'										     OR B.WORK_USR    LIKE '%@SEARCH_KEY%'										 )								[/SEARCH_KEY]								[FM_YMD]									AND B.REQ_YMD >= '@FM_YMD'								[/FM_YMD]								[TO_YMD]									AND B.REQ_YMD <= '@TO_YMD'								[/TO_YMD]								[SVC_CD]								    --AND A.SVC_CD = '@SVC_CD'								    AND A.CUST_CD IN (SELECT CUST_CD FROM CRM_CUST_SVC WHERE SVC_CD = '@SVC_CD')								[/SVC_CD]								[MATN_YN]								    AND A.MATN_YN = '@MATN_YN'								[/MATN_YN]									)			--동일조건 아래쪽에도 추가해야함	 GROUP BY A.CUST_CD )SELECT A.CUST_CD     , A.CUST_NM     , MAX(A.REQ_FIN) AS REQ_FIN	 , (SELECT CD_NM FROM MDM_COM_CODE WHERE GRP_CD = 'T02' AND COMN_CD = A.REQ_SVC ) AS REQ_SVC	 , A.SVC_CD	 , (SELECT CD_NM FROM MDM_COM_CODE WHERE GRP_CD = 'T05' AND COMN_CD = A.REQ_TYPE) AS REQ_TYPE
     , (SELECT CD_NM FROM MDM_COM_CODE WHERE GRP_CD = 'T09' AND COMN_CD = A.REQ_TYPE2) AS REQ_TYPE2     , MAX(A.REQ_COUNT) AS REQ_COUNT     , MAX(A.WORK_TOTAL) AS WORK_TOTAL     , MAX(A.WORK_AVG) AS WORK_AVGFROM (        SELECT A.CUST_CD       , A.CUST_LOC_NM AS CUST_NM       , MAX(B.REQ_YMD) AS REQ_FIN       , B.REQ_SVC       , S.SVC_CD       , B.REQ_TYPE
       , B.REQ_TYPE2       , CASE WHEN MAX(B.REQ_YMD) IS NULL              THEN 0              ELSE COUNT(A.CUST_CD)              END AS REQ_COUNT  -- 요청건수       , CASE WHEN MAX(B.REQ_YMD) IS NULL              THEN 0              ELSE SUM(TO_DATE(NVL(B.CMPT_YMD,B.REQ_YMD),'YYYYMMDD') - TO_DATE(B.REQ_YMD,'YYYYMMDD') + 1)               END AS WORK_TOTAL --총작업일수       , CASE WHEN MAX(B.REQ_YMD) IS NULL              THEN 0              ELSE ROUND(AVG(TO_DATE(NVL(B.CMPT_YMD,B.REQ_YMD),'YYYYMMDD') - TO_DATE(B.REQ_YMD,'YYYYMMDD') + 1), 1)               END AS WORK_AVG --평균작업기간    FROM CRM_AS_MST B          INNER JOIN W_CRM_CUST_SVC S                 ON B.CUST_CD = S.CUST_CD         LEFT OUTER JOIN CRM_CUST_MST A                  ON A.CUST_CD = B.CUST_CD   WHERE 1=1   --동일조건 위쪽에도 추가해야함	[SEARCH_KEY]		AND ( 1 != 1				 OR B.CUST_CD     LIKE '%@SEARCH_KEY%'				 OR A.CUST_NM     LIKE '%@SEARCH_KEY%'				 OR A.CUST_LOC_NM LIKE '%@SEARCH_KEY%'			     OR B.WORK_USR    LIKE '%@SEARCH_KEY%'			 )	[/SEARCH_KEY]	[FM_YMD]		AND B.REQ_YMD >= '@FM_YMD'	[/FM_YMD]	[TO_YMD]		AND B.REQ_YMD <= '@TO_YMD'	[/TO_YMD]	[SVC_CD]	    --AND A.SVC_CD = '@SVC_CD'	    AND A.CUST_CD IN (SELECT CUST_CD FROM CRM_CUST_SVC WHERE SVC_CD = '@SVC_CD')	[/SVC_CD]	[MATN_YN]	    AND A.MATN_YN = '@MATN_YN'	[/MATN_YN]   --동일조건 위쪽에도 추가해야함   GROUP BY A.CUST_CD, A.CUST_LOC_NM, B.REQ_SVC, S.SVC_CD, B.REQ_TYPE, B.REQ_TYPE2) A    GROUP BY A.CUST_CD, A.CUST_NM, A.REQ_SVC, A.SVC_CD, A.REQ_TYPE, A.REQ_TYPE2ORDER BY A.CUST_CD, A.CUST_NM, A.REQ_SVC, A.SVC_CD, A.REQ_TYPE, A.REQ_TYPE2
